[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aerodrome-ai-agent"
version = "1.0.0"
description = "Autonomous AI-powered DeFi portfolio manager for Aerodrome Finance"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aerodrome AI Agent", email = "admin@aerodrome-agent.ai"},
]
keywords = ["defi", "aerodrome", "ai", "trading", "base", "blockchain"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.2",
    "cdp-sdk>=1.29.0",
    "langgraph>=0.6.6",
    "langgraph-checkpoint>=1.0.0",
    "openai>=1.10.0",
    "mem0ai>=0.1.0",
    "pandas>=2.1.4",
    "numpy>=1.26.2",
    "scikit-learn>=1.3.0",
    "qdrant-client>=1.7.0",
    "firebase-admin>=6.2.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "aiohttp>=3.9.1",
    "asyncio-throttle>=1.0.2",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "colorlog>=6.8.0",
    "click>=8.1.0",
    "python-json-logger>=2.0.0",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "coverage>=7.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/aerodrome-ai/agent"
Documentation = "https://docs.aerodrome-agent.ai"
Repository = "https://github.com/aerodrome-ai/agent.git"
"Bug Tracker" = "https://github.com/aerodrome-ai/agent/issues"

[project.scripts]
aerodrome-agent = "aerodrome_ai_agent.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aerodrome_ai_agent"]
known_third_party = ["cdp_sdk", "langgraph", "mem0", "openai"]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cdp_sdk.*",
    "langgraph.*",
    "mem0.*",
    "qdrant_client.*",
    "firebase_admin.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Ruff linter configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]