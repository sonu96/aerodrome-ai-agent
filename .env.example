# Aerodrome AI Agent Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
ENVIRONMENT=development  # development, production, test
DEBUG=true
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# =============================================================================
# API CONFIGURATION
# =============================================================================
API_TITLE="Aerodrome AI Agent API"
API_VERSION="1.0.0"
API_DESCRIPTION="AI-powered Aerodrome Protocol assistant"
API_KEY="your-secure-api-key-here"
PORT=8080

# Security
ALLOWED_ORIGINS="*"
TRUSTED_HOSTS="*"

# Rate Limiting
RATE_LIMIT_REQUESTS="100/minute"
RATE_LIMIT_QUERY="10/minute"

# =============================================================================
# BRAIN CONFIGURATION
# =============================================================================
CONFIDENCE_THRESHOLD=0.7
MAX_CONCURRENT_QUERIES=10
HEALTH_CHECK_INTERVAL=30
BRAIN_RISK_THRESHOLD=0.3
BRAIN_MIN_OPPORTUNITY_SCORE=0.6
BRAIN_OBSERVATION_INTERVAL=60
BRAIN_EXECUTION_TIMEOUT=30
BRAIN_MAX_POSITION_SIZE=0.2
BRAIN_MAX_SLIPPAGE=0.02
BRAIN_EMERGENCY_STOP_LOSS=0.1
BRAIN_MAX_GAS_PRICE=50.0

# =============================================================================
# MEMORY CONFIGURATION (Mem0)
# =============================================================================
MEM0_API_KEY="your-mem0-api-key"
MEMORY_USER_ID=aerodrome_agent
MEMORY_VECTOR_STORE=qdrant
MEMORY_EMBEDDING_MODEL=text-embedding-ada-002
MEMORY_LLM_MODEL=gpt-4

# Neo4j Configuration (for memory graph)
NEO4J_URI="bolt://localhost:7687"
NEO4J_USERNAME="neo4j"
NEO4J_PASSWORD="your-neo4j-password"

# Vector Database (Qdrant)
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_API_KEY=your_qdrant_api_key_if_cloud
MEMORY_COLLECTION=aerodrome_memories

# Memory Management
MEMORY_MAX_MEMORIES=10000
MEMORY_MAX_AGE_DAYS=90
MEMORY_MAX_QUERY=10
MEMORY_PATTERN_THRESHOLD=5
MEMORY_PATTERN_CONFIDENCE=0.8
MEMORY_SIMILARITY_THRESHOLD=0.85

# Pruning Configuration
MEMORY_PRUNING_ENABLED=true
MEMORY_PRUNING_INTERVAL=24
MEMORY_HOT_TIER_DAYS=7
MEMORY_WARM_TIER_DAYS=30
MEMORY_COLD_TIER_DAYS=60

# =============================================================================
# PROTOCOL CONFIGURATION
# =============================================================================
QUICKNODE_URL="https://your-quicknode-endpoint.quiknode.pro/your-token/"
NETWORK=base-mainnet
RPC_URL=https://mainnet.base.org

# =============================================================================
# AI CONFIGURATION
# =============================================================================

# Google Gemini - Choose one authentication method:
# Option 1: API Key (for testing/development)
GEMINI_API_KEY=""  # Leave empty to use Application Default Credentials

# Option 2: Application Default Credentials (recommended for production)
# Run: gcloud auth application-default login
# Or set service account: export GOOGLE_APPLICATION_CREDENTIALS="/path/to/key.json"

GEMINI_MODEL="gemini-2.0-flash-001"
GOOGLE_CLOUD_LOCATION="us-central1"  # Vertex AI location

# OpenAI (for embeddings)
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# CDP SDK CONFIGURATION (Optional - for Part 2)
# =============================================================================
CDP_API_KEY_NAME=your_cdp_api_key_name
CDP_API_KEY_PRIVATE_KEY=your_cdp_private_key_here
CDP_NETWORK_ID=base-mainnet
CDP_WALLET_ID=your_wallet_id_if_existing
CDP_WALLET_SEED=your_wallet_seed_if_existing
CDP_MAX_GAS_PRICE=50.0
CDP_GAS_MULTIPLIER=1.1
CDP_CONFIRMATION_BLOCKS=1
CDP_TRANSACTION_TIMEOUT=300
CDP_MAX_RETRIES=3
CDP_RETRY_DELAY=1.0
CDP_SIMULATION_REQUIRED=true
CDP_MAX_SLIPPAGE=0.02
CDP_MIN_CONFIRMATIONS=1
CDP_REQUESTS_PER_SECOND=10
CDP_BURST_LIMIT=50
CDP_LOG_TRANSACTIONS=true
CDP_ENABLE_METRICS=true

# =============================================================================
# AGENT CONFIGURATION
# =============================================================================
AGENT_NAME=aerodrome-brain
OPERATION_MODE=autonomous
RISK_LEVEL=medium
MAX_CONCURRENT_OPERATIONS=5
OPERATION_INTERVAL=60

# =============================================================================
# SAFETY & RISK MANAGEMENT
# =============================================================================
EMERGENCY_STOP_ENABLED=true
MAX_LOSS_PERCENTAGE=10.0

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================
METRICS_ENABLED=true
METRICS_PORT=8080
HEALTH_CHECK_PORT=8081
ENABLE_STRUCTURED_LOGGING=true

# =============================================================================
# GOOGLE CLOUD CONFIGURATION
# =============================================================================
GOOGLE_CLOUD_PROJECT="your-gcp-project-id"  # Required for Vertex AI

# Authentication (choose one):
# 1. For local development: gcloud auth application-default login
# 2. For service account: export GOOGLE_APPLICATION_CREDENTIALS="/path/to/key.json"
# 3. On GCP: Uses attached service account automatically

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
DATA_DIR=./data
LOGS_DIR=./logs
CACHE_DIR=./cache
